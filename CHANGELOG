* Separate behaviors of AssociationCollection#replace according to :accessible value

* Rewriting: accessible associations are no longer dependent on AR::Base#attributes

* Added support to destroy

  project.tasks.size # => 1

  project.update_attributes :tasks => [
    { :id => 1, :destroy => true },
  ]

  project.tasks.size # => 0

* Keep behaviors separated

* Added support to update

  project.update_attributes :tasks => [
    { :id => 1, :name => "Implement me" },
    { :name => "Evangelize", :description => "Tell to your friends!" }
  ]

  project.tasks.size # => 2
  project.tasks.first.name # => "Implement me"
  project.tasks.last.name # => "Evangelize"

* Added support to has_many

  class Project < ActiveRecord::Base
    has_many :tasks, :accessible => true
  end

  Project.create :name => "NestedModels", :tasks => [
    { :name => "Implement", :description => "Implement me" }
  ]
